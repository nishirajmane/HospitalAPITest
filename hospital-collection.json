{
	"info": {
		"_postman_id": "b8fa5536-1aa3-42fc-bed5-bd0f33b41c3f",
		"name": "Hospital API Test",
		"description": "StartFragmentAPI Tests for patient, appointment, and medicine modules.EndFragment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46034401"
	},
	"item": [
		{
			"name": "Get all Patients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Each patient has id, name, age, and disease\", () => {\r",
							"    const patients = pm.response.json();\r",
							"    patients.forEach(p => {\r",
							"        pm.expect(p).to.have.property(\"id\");\r",
							"        pm.expect(p).to.have.property(\"name\");\r",
							"        pm.expect(p).to.have.property(\"age\");\r",
							"        pm.expect(p).to.have.property(\"disease\");\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/patients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Patients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 (Created)\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"New patient has an id\", function () {\r",
							"    const patient = pm.response.json();\r",
							"    pm.expect(patient).to.have.property(\"id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/patients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update patients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Updated patient has correct name and age\", function () {\r",
							"    const patient = pm.response.json();\r",
							"    pm.expect(patient).to.have.property(\"name\", \"Updated Name\");\r",
							"    pm.expect(patient).to.have.property(\"age\", 40); // change as per test data\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/patients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Patients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/patients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Appointments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array of appointments\", () => {\r",
							"    const data = pm.response.json();\r",
							"    data.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"id\");\r",
							"        pm.expect(item).to.have.property(\"patientId\");\r",
							"        pm.expect(item).to.have.property(\"doctor\");\r",
							"        pm.expect(item).to.have.property(\"date\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/appointments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add appointments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Appointment created with id\", () => {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/appointments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Appointment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Appointment updated correctly\", () => {\r",
							"    const a = pm.response.json();\r",
							"    pm.expect(a).to.have.property(\"doctor\", \"Dr. Updated Name\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/appointments/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"appointments",
						"1"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Appointment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/appointments/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"appointments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Medicines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Each medicine has id, name and quantity\", () => {\r",
							"    const meds = pm.response.json();\r",
							"    meds.forEach(m => {\r",
							"        pm.expect(m).to.have.property(\"id\");\r",
							"        pm.expect(m).to.have.property(\"name\");\r",
							"        pm.expect(m).to.have.property(\"quantity\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/medicines",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"medicines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Medicines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Medicine created with id\", () => {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/medicines",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"medicines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Medicines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Medicine updated correctly\", () => {\r",
							"    const med = pm.response.json();\r",
							"    pm.expect(med).to.have.property(\"quantity\", 75); // update value as per your test data\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/medicines/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"medicines",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Medicines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/medicines",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"medicines"
					]
				}
			},
			"response": []
		}
	]
}